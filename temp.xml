<?xml version="1.0" encoding="UTF-8"?>
<?asciidoc-toc?>
<?asciidoc-numbered?>
<book xmlns="http://docbook.org/ns/docbook" xmlns:xl="http://www.w3.org/1999/xlink" version="5.0" xml:lang="en">
<info>
<title>Lubuntu Setup</title>
<date>2016-11-17</date>
</info>
<chapter xml:id="_launcher">
<title>Launcher</title>
<simpara>The simplest is to use <literal>ALT-F2</literal>, then type name of the application.
Alternatively, you can install <emphasis>Gnome-Do</emphasis></simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara><literal>sudo apt-get install gnome-do</literal></simpara>
</listitem>
<listitem>
<simpara>Configure gnome-do to start with the OS</simpara>
</listitem>
<listitem>
<simpara>Make sure the superkey + space is the hotkey</simpara>
</listitem>
</orderedlist>
</chapter>
<chapter xml:id="_terminals">
<title>Terminals</title>
<orderedlist numeration="arabic">
<listitem>
<simpara><literal>sudo apt-get install guake terminator</literal></simpara>
</listitem>
<listitem>
<simpara><literal>sudo apt-get install terminator</literal></simpara>
</listitem>
<listitem>
<simpara>remap the keybindings</simpara>
</listitem>
<listitem>
<simpara>configure as login shell</simpara>
</listitem>
</orderedlist>
</chapter>
<chapter xml:id="_java">
<title>Java</title>
<simpara>To install the oracle JVM and JDK, add webupd8team repository and pull
the specifict JDK version from the repo</simpara>
<screen>sudo add-apt-repository ppa:webupd8team/java
sudo apt-get update
sudo apt-get install oracle-java8-installer
sudo update-alternatives --config java</screen>
<simpara>If you need JDK 7;</simpara>
<simpara><literal>sudo apt-get install oracle-java7-installer</literal></simpara>
<simpara>then switch your JDK using</simpara>
<simpara><literal>sudo update-alternatives --config java</literal></simpara>
</chapter>
<chapter xml:id="_ruby">
<title>Ruby</title>
<simpara>Install the Ruby Version Manager (rvm), then install your specific
version of ruby</simpara>
<screen>curl -sSL https://get.rvm.io | bash
rvm install 2.1.3
rvm create alias 2.1.3 # make this version the default
gem install asciidoctor # for writing
gem install jekyll # for static website
gem install pygments.rb</screen>
</chapter>
<chapter xml:id="_python">
<title>Python</title>
<example>
<title>The most basic way to install Python</title>
<literallayout class="monospaced">sudo apt-get install python-setuptools
sudo easy_install pip
sudo pip pygments</literallayout>
</example>
<simpara>Using the new Python notebooks requires a bit more software, there are
many out there but we will use Jupyter, this is a popular software
among Python enthusiast.</simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>Go to the Continuum website at
<link xl:href="https://www.continuum.io/downloads">https://www.continuum.io/downloads</link></simpara>
</listitem>
<listitem>
<simpara>Download the Anaconda installer. At this point, you most likely
have the Python 2.x version, so choose that for the download</simpara>
</listitem>
<listitem>
<simpara>Follow the instruction on the website on how to install Anaconda,
most likely, it simply be a bash command</simpara>
<screen>bash Anaconda2-4.2.0-Linux-x86_64.sh</screen>
</listitem>
<listitem>
<simpara>Install the Jupyter software using the command <literal>conda install
jupyter</literal></simpara>
</listitem>
</orderedlist>
<simpara>To start using the interactive notebook, create a working directory
and start the notebook from there</simpara>
<example>
<title>Starting a Python notebook</title>
<literallayout class="monospaced">mkdir pythontest &amp;&amp; cd pythontest
jupyter notebook</literallayout>
</example>
<simpara>It will start a webserver and quite possibly, launch your default
browser as well. Then you can start mucking around the notebook</simpara>
</chapter>
<chapter xml:id="_nodejs">
<title>NodeJS</title>
<simpara>Install NVM first.</simpara>
<literallayout class="monospaced">curl -o-
https://raw.githubusercontent.com/creationix/nvm/v0.32.1/install.sh |
bash</literallayout>
<simpara>Then install a version of node</simpara>
<literallayout class="monospaced">nvm install 6.3.1</literallayout>
<simpara>Start getting some software via <emphasis role="strong">npm</emphasis></simpara>
<literallayout class="monospaced">npm install -g nodemon
npm install -g http-server</literallayout>
<simpara>Perhaps, get another version of node</simpara>
<literallayout class="monospaced">nvm install 6.2.2</literallayout>
</chapter>
<chapter xml:id="_editors_and_tmux">
<title>Editors and Tmux</title>
<simpara>Get vim, tmux, emacs and git</simpara>
<literallayout class="monospaced">sudo apt-get install vim-nox tmux emacs git</literallayout>
<simpara>Pull your configs and put them on a work area folder</simpara>
<literallayout class="monospaced">mkdir workarea &amp;&amp; cd workarea
git clone https://github.com/tedhagos/configs.git</literallayout>
<simpara>I saved my vimrc, tmux.conf, bashrc and other stuff on a git repo,
that&#8217;s why I pulled the configs.git.</simpara>
<simpara>Get the vimrc sorted out.</simpara>
<literallayout class="monospaced">cd ~ &amp;&amp; cp ~/workarea/vimrc .vimrc</literallayout>
<simpara>Then get the tmux.conf sorted out</simpara>
<literallayout class="monospaced">cp ~/workarea/tmux.conf .tmux.conf</literallayout>
<simpara>Get some nice fonts for the terminal</simpara>
<literallayout class="monospaced">sudo apt-get install fonts-inconsolata</literallayout>
<simpara>And configure terminals to use <emphasis>inconsolata</emphasis></simpara>
</chapter>
<chapter xml:id="_music">
<title>Music</title>
<orderedlist numeration="arabic">
<listitem>
<simpara>Replace the default sound server</simpara>
</listitem>
<listitem>
<simpara><literal>sudo add-apt-repository ppa:nilarimogard/webupd8</literal></simpara>
</listitem>
<listitem>
<simpara><literal>sudo apt-get update</literal></simpara>
</listitem>
<listitem>
<simpara><literal>sudo apt-get install pulseaudio-equalizer</literal></simpara>
</listitem>
<listitem>
<simpara>Change the settings of the equalizer, search "equalizer" in
gnome-do</simpara>
</listitem>
<listitem>
<simpara><literal>sudo apt-get install cmus</literal></simpara>
</listitem>
</orderedlist>
</chapter>
<chapter xml:id="_cloud_storage">
<title>Cloud Storage</title>
<section xml:id="_dropbox">
<title>Dropbox</title>
<simpara>Head over to
<link xl:href="https://www.dropbox.com/install">https://www.dropbox.com/install</link>, get
the right installer for your platform. There are instructions on how
to do the command line installation on that page, follow that.</simpara>
<simpara>When the dropbox installer finishes downloading, install the .deb or
whatever package you did download. Then start dropbox</simpara>
<literallayout class="monospaced">dropbox start -i</literallayout>
<simpara>As Ubuntu 16, Dropbox does not start automatically with the OS, so
you have to start it manually every time you boot.</simpara>
<literallayout class="monospaced">sudo dropbox start</literallayout>
</section>
<section xml:id="_google_drive">
<title>Google Drive</title>
<simpara>Get OverGrive at
<link xl:href="https://www.thefanclub.co.za/overgrive">https://www.thefanclub.co.za/overgrive</link>,
you need to pay for it. It is worth it, just fork it out. Download the
the installer for Ubuntu and install either using dpkg or just double
click the DEB file.</simpara>
<simpara>Launch it however you like it, either using gnome-do or just <literal>ALT-F2</literal>,
type <emphasis>overgrive</emphasis>, it should appear on the system tray.</simpara>
<simpara>Once you see the OverGrive icon on the tray, configure it using its
Preferences menu. You should be able to sync it with your Google
Drive account.</simpara>
<warning>
<simpara>When you buy the OverGrive license, it will ask for your
email address, make sure that this email address is the account you
want to sync in Google Drive. The license is tied to the email address
you use at the time of purchase</simpara>
</warning>
</section>
</chapter>
<chapter xml:id="_hp_printers">
<title>HP Printers</title>
<orderedlist numeration="arabic">
<listitem>
<simpara><literal>sudo apt-get install hplip hplip-gui</literal></simpara>
</listitem>
<listitem>
<simpara>Use the HPLip toolbox to setup the printers</simpara>
</listitem>
<listitem>
<simpara>Launch gnome-do, search "HPLip toolbox"</simpara>
</listitem>
</orderedlist>
</chapter>
<chapter xml:id="_nvpy">
<title>nvPY</title>
<screen>sudo apt-get install nvpy</screen>
<simpara>Create a config file for nvpy</simpara>
<screen>sudo touch ~/.nvpy.cfg</screen>
<simpara>Create the nvpy configuration file on your home folder</simpara>
<formalpara>
<title>nvpy.cfg</title>
<para>
<literallayout class="monospaced">[nvpy]
notes_as_txt = 1
txt_path = /home/thagos/Dropbox/notes

#disable simplenote syncing, use 1 to enable it
simplenote_sync = 0

# 0 value will sort in alphanumeric mode
sort_mode = 1</literallayout>
</para>
</formalpara>
</chapter>
<chapter xml:id="_ripping_tools">
<title>Ripping tools</title>
<simpara><emphasis role="strong">Youtube</emphasis></simpara>
<screen>sudo apt-get install youtube-dl
youtube-dl &lt;youtue URL&gt;</screen>
<simpara><emphasis role="strong">Download accelerator</emphasis></simpara>
<screen>sudo apt-get install axel
axel -n 10 &lt;URL&gt;</screen>
</chapter>
<chapter xml:id="_writing_toolchain">
<title>Writing toolchain</title>
<screen>rvm use 2.1.3 # or any other ruby version you are using
gem install asciidoctor</screen>
<simpara><emphasis role="strong">DocBook</emphasis></simpara>
<screen>sudo apt-get install xsltproc docbook-xsl-ns docbook5-xml</screen>
</chapter>
<chapter xml:id="_package_manager">
<title>Package Manager</title>
<simpara>When you are using a supported version of Ubuntu, you usually won&#8217;t
have mess around package management settings. Just follow the GUI
wizards when the software updater prompts you for updates.</simpara>
<section xml:id="_updating_on_the_command_line">
<title>Updating on the command line</title>
<informalexample>
<literallayout class="monospaced">sudo apt-get update <co xml:id="CO1-1"/>
sudo apt-get upgrade <co xml:id="CO1-2"/>
sudo apt-get dist-upgrade <co xml:id="CO1-3"/></literallayout>
</informalexample>
<calloutlist>
<callout arearefs="CO1-1">
<para>Fetches the list of available updates</para>
</callout>
<callout arearefs="CO1-2">
<para>Strictly upgrades the current packages</para>
</callout>
<callout arearefs="CO1-3">
<para>Installs updates, the new ones</para>
</callout>
</calloutlist>
</section>
<section xml:id="_updating_an_old_unsupported_version">
<title>Updating an old unsupported version</title>
<simpara>Ubuntu versions or releases are supported for 9 months. The LTS (Long
Term Support) are supported up to 5 years. Once the support time
horizon is up, the repos for the old Ubuntu release is moved somewhere
else. That is why if you do the <literal>sudo apt-get update</literal>, you get the
<emphasis role="strong">404</emphasis> error. The repos are no longer there. This is the situation
where you need to edit the <literal>/etc/apt/sources.list</literal> file.</simpara>
<orderedlist numeration="arabic">
<listitem>
<simpara>Edit the source.list file, <literal>sudo vim /etc/apt/sources.list</literal></simpara>
</listitem>
<listitem>
<simpara>replace all occurences of the string <literal>xx.archive.ubuntu.com</literal> with
<literal>old-releases.ubuntu.com</literal></simpara>
</listitem>
<listitem>
<simpara>Find the line that reads <literal>deb <link xl:href="http://archive.ubuntu.com/ubuntu">http://archive.ubuntu.com/ubuntu</link> main
universe restricted multiverse</literal>, comment it out</simpara>
</listitem>
<listitem>
<simpara>Run <literal>sudo apt-get update &amp;&amp; sudo apt-get upgrade</literal></simpara>
</listitem>
</orderedlist>
</section>
<section xml:id="_upgrading_to_a_new_release">
<title>Upgrading to a new release</title>
<literallayout class="monospaced">sudo apt-get install update-manager-core
sudo do-release-upgrade</literallayout>
<simpara>You will wait for a long time, it could take hours</simpara>
</section>
</chapter>
</book>